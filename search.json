[{"path":"https://arnaudgallou.github.io/plume/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 plume authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://arnaudgallou.github.io/plume/articles/plume-workflow.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"plume workflow","text":"plume designed work spreadsheets, makes easy store, maintain share data co-authors. recommend using Google Sheets take advantage R interface provided googlesheets4 package. First, need create spreadsheet. plm_template() provides default template purpose. create sheet named encyclopédie columns defined plm_template(). Enter information share sheet collaborators can add . Note ’s first time use googlesheets4, ’ll need grant package permission work Google Sheets. can read googlesheets4 authentication . sheet online, use read_sheet() read R.","code":"library(googlesheets4)  gs4_create(   name = \"encyclopédie\",   sheets = plm_template() ) read_sheet(gs4_find(\"encyclopédie\"))"},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/articles/plume-workflow.html","id":"plume","dir":"Articles","previous_headings":"Set up","what":"Plume","title":"plume workflow","text":"use Plume, put code directly R markdown Quarto document shown example . modify author data, simply edit spreadsheet. author information document update automatically next time render .","code":"--- title: An awesome publication execute:   echo: false ---  ```{r} #| label: setup #| include: false  library(googlesheets4) library(plume)  tbl_authors <- gs4_find(\"encyclopédie\") |> read_sheet()  aut <- Plume$new(tbl_authors) aut$set_corresponding_authors(1) ```  `r aut$get_author_list(\"^a,^cno\")`  ## Main text  Lorem ipsum...  ## Contributions  ```{r} #| results: asis aut$get_contributions() |> cat(sep = \"; \") ```"},{"path":"https://arnaudgallou.github.io/plume/articles/plume-workflow.html","id":"plumequarto","dir":"Articles","previous_headings":"Set up","what":"PlumeQuarto","title":"plume workflow","text":"use PlumeQuarto inject author information Quarto document, ’ll pass data separate R script. Remember run script everytime spreadsheet updated implement changes document.","code":"library(googlesheets4) library(plume)  tbl_authors <- gs4_find(\"encyclopédie\") |> read_sheet()  aut <- PlumeQuarto$new(tbl_authors) aut$set_corresponding_authors(1) aut$to_yaml(\"file.qmd\")"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Introduction to plume","text":"’ll use data sets encyclopedists encyclopedists_fr explore different functionalities package. data sets contain information four famous authors “Encyclopédie”, published France 18th century. encyclopedists_fr French translation encyclopedists used illustrate handle custom variable names. data sets documented ?encyclopedists.","code":"encyclopedists #> # A tibble: 4 × 12 #>   given_name family_name email phone orcid role_n1 role_n2 role_v1 role_v2 note  #>   <chr>      <chr>       <chr> <chr> <chr> <chr>   <chr>   <chr>   <chr>   <chr> #> 1 Denis      Diderot     dide… 00 0… 0000… Writing Superv… contri… superv… born… #> 2 Jean-Jacq… Rousseau    rous… NA    0000… Writing NA      contri… NA      NA    #> 3 François-… Arouet      arou… NA    NA    Writing NA      contri… NA      also… #> 4 Jean       Le Rond d'… alem… NA    0000… Writing Superv… contri… superv… born… #> # ℹ 2 more variables: affiliation1 <chr>, affiliation2 <chr>"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"creating-a-plume-object","dir":"Articles","previous_headings":"","what":"Creating a plume object","title":"Introduction to plume","text":"plume provides two R6 classes, namely Plume PlumeQuarto. create plume object, simply write name class want use followed new() method. plume classes take data frame tibble input data. input data must least two columns named given_name family_name.","code":"Plume$new(encyclopedists) #> # A tibble: 4 × 11 #>      id given_name     family_name literal_name initials email orcid phone note  #>   <int> <chr>          <chr>       <chr>        <chr>    <chr> <chr> <chr> <chr> #> 1     1 Denis          Diderot     Denis Dider… DD       dide… 0000… 00 0… born… #> 2     2 Jean-Jacques   Rousseau    Jean-Jacque… J-JR     rous… 0000… NA    NA    #> 3     3 François-Marie Arouet      François-Ma… F-MA     arou… NA    NA    also… #> 4     4 Jean           Le Rond d'… Jean Le Ron… JLRd'A   alem… 0000… NA    born… #> # ℹ 2 more variables: affiliation <list>, role <list>"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"default-variables","dir":"Articles","previous_headings":"","what":"Default variables","title":"Introduction to plume","text":"default variables handled plume classes organised five categories: Primary: variables required create plume object. given_name family_name Secondary: optional variables can provided input data. number dropping_particle email orcid phone fax url Nestable: optional variables can provided input data. variables differ secondary variables can used pass multiple independent values authors. Nestable variables must start prefix. E.g. affiliation_1, affiliation_2, …, affiliation_n pass several affiliations authors. affiliation role note Internal: variables created internally. variables don’t need provided input data ignored supplied. shouldn’t worry much variables unless want customise names extend plume classes new default names. id initials literal_name corresponding deceased equal_contributor Meta: PlumeQuarto-specific variables used pass extra information doesn’t fit categories. Meta columns must start prefix meta- followed custom name (e.g. meta-extra_info). use variables pass data template specific. See Quarto’s arbitrary-metadata section details.","code":""},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"using-custom-names","dir":"Articles","previous_headings":"","what":"Using custom names","title":"Introduction to plume","text":"plume lets use custom variable names. Simply provide names parameter named vector instantiating plume class, keys default names values respective replacements.","code":"Plume$new(   encyclopedists_fr,   names = c(     given_name = \"prénom\",     family_name = \"nom\",     literal_name = \"nom_complet\",     email = \"courriel\",     initials = \"initiales\",     role = \"role_v\"   ) ) #> # A tibble: 4 × 10 #>      id prénom      nom   nom_complet initiales courriel orcid note  affiliation #>   <int> <chr>       <chr> <chr>       <chr>     <chr>    <chr> <chr> <list>      #> 1     1 Denis       Dide… Denis Dide… DD        diderot… 0000… né e… <tibble>    #> 2     2 Jean-Jacqu… Rous… Jean-Jacqu… J-JR      roussea… 0000… NA    <tibble>    #> 3     3 François-M… Arou… François-M… F-MA      arouet@… NA    dit … <tibble>    #> 4     4 Jean        Le R… Jean Le Ro… JLRd'A    alember… 0000… né e… <tibble>    #> # ℹ 1 more variable: role_v <list>"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"pushing-data-into-a-yaml-header","dir":"Articles","previous_headings":"","what":"Pushing data into a YAML header","title":"Introduction to plume","text":"PlumeQuarto allows inject author metadata directly YAML header .qmd file. Consider following .qmd file: can push information input data YAML header using to_yaml() method. Authors listed order ’re defined input data. YAML header already author affiliations keys, to_yaml() replaces old values new ones.","code":"--- title: Encyclopédie ---  Qui scribit bis legit aut <- PlumeQuarto$new(dplyr::slice(encyclopedists, 1, 4)) aut$to_yaml(\"file.qmd\") --- title: Encyclopédie author:   - id: aut1     name:       given: Denis       family: Diderot     orcid: 0000-0000-0000-0001     email: diderot@encyclopediste.fr     phone: 00 00 00 01     roles:       - writing       - supervision       - contributed to the encyclopédie       - supervised the project     note: born in 1713 in Langres     affiliations:       - ref: aff1   - id: aut2     name:       given: Jean       family: Le Rond d'Alembert     orcid: 0000-0000-0000-0003     email: alembert@encyclopediste.fr     roles:       - writing       - supervision       - contributed to the encyclopédie       - supervised the project     note: born in 1717 in Paris     affiliations:       - ref: aff1       - ref: aff2 affiliations:   - id: aff1     name: Université de Paris   - id: aff2     name: Collège des Quatre-Nations ---  Qui scribit bis legit aut <- PlumeQuarto$new(dplyr::slice(encyclopedists, 2)) aut$to_yaml(\"file.qmd\") --- title: Encyclopédie author:   - id: aut1     name:       given: Jean-Jacques       family: Rousseau     orcid: 0000-0000-0000-0002     email: rousseau@encyclopediste.fr     roles:       - writing       - contributed to the encyclopédie     affiliations:       - ref: aff1 affiliations:   - id: aff1     name: Lycée Louis-le-Grand ---  Qui scribit bis legit"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"assigning-status-to-authors","dir":"Articles","previous_headings":"","what":"Assigning status to authors","title":"Introduction to plume","text":"plume provides three methods set particular status authors: set_corresponding_authors() set_equal_contributor() set_deceased() set_equal_contributor() set_deceased() specific PlumeQuarto. can specify equal contributors deceased authors Plume via note variable. default, set_*() methods assign values authors’ id. can change behaviour object method level using parameter. Note methods case insensitive. Use \"\" keyword assign TRUE authors.","code":"aut <- Plume$new(   dplyr::select(encyclopedists, given_name, family_name),   by = \"initials\" )  aut$set_corresponding_authors(dd, \"j-jr\") aut #> # A tibble: 4 × 6 #>      id given_name     family_name        literal_name    initials corresponding #>   <int> <chr>          <chr>              <chr>           <chr>    <lgl>         #> 1     1 Denis          Diderot            Denis Diderot   DD       TRUE          #> 2     2 Jean-Jacques   Rousseau           Jean-Jacques R… J-JR     TRUE          #> 3     3 François-Marie Arouet             François-Marie… F-MA     FALSE         #> 4     4 Jean           Le Rond d'Alembert Jean Le Rond d… JLRd'A   FALSE  aut$set_corresponding_authors(arouet, by = \"family_name\") aut #> # A tibble: 4 × 6 #>      id given_name     family_name        literal_name    initials corresponding #>   <int> <chr>          <chr>              <chr>           <chr>    <lgl>         #> 1     1 Denis          Diderot            Denis Diderot   DD       FALSE         #> 2     2 Jean-Jacques   Rousseau           Jean-Jacques R… J-JR     FALSE         #> 3     3 François-Marie Arouet             François-Marie… F-MA     TRUE          #> 4     4 Jean           Le Rond d'Alembert Jean Le Rond d… JLRd'A   FALSE aut$set_corresponding_authors(\"all\") aut #> # A tibble: 4 × 6 #>      id given_name     family_name        literal_name    initials corresponding #>   <int> <chr>          <chr>              <chr>           <chr>    <lgl>         #> 1     1 Denis          Diderot            Denis Diderot   DD       TRUE          #> 2     2 Jean-Jacques   Rousseau           Jean-Jacques R… J-JR     TRUE          #> 3     3 François-Marie Arouet             François-Marie… F-MA     TRUE          #> 4     4 Jean           Le Rond d'Alembert Jean Le Rond d… JLRd'A   TRUE"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"getting-author-information","dir":"Articles","previous_headings":"","what":"Getting author information","title":"Introduction to plume","text":"get_*() methods format author information character vectors. can useful want output author data document without using journal templates, print contributions simply generate author information ready copy-pasted documents.","code":""},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"author-lists","dir":"Articles","previous_headings":"Getting author information","what":"Author lists","title":"Introduction to plume","text":"get_author_list() generates author lists. can control formatting author suffixes (symbols linking authors affiliations, notes metadata) using format parameter. format takes character string argument allows choose symbol categories suffix authors , using following keys: affiliations c corresponding authors n notes o ORCIDs order keys determines order symbol categories. addition, can use ^ superscript , separate symbols. Use format = NULL format = \"\" ignore suffixes:","code":"aut <- Plume$new(encyclopedists) aut$set_corresponding_authors(\"all\")  aut$get_author_list(format = \"ac\") |> enumerate(last = \",\\n\") #> Denis Diderot1\\*, Jean-Jacques Rousseau2\\*, François-Marie Arouet2\\*, #> Jean Le Rond d'Alembert1,3\\*  aut$get_author_list(format = \"ca\") |> enumerate(last = \",\\n\") #> Denis Diderot\\*1, Jean-Jacques Rousseau\\*2, François-Marie Arouet\\*2, #> Jean Le Rond d'Alembert\\*1,3 aut$set_corresponding_authors(1, 4)  aut$get_author_list(format = \"^a,^cn\") |> enumerate(last = \",\\n\") #> Denis Diderot^1,^\\*†, Jean-Jacques Rousseau^2^, François-Marie Arouet^2^‡, #> Jean Le Rond d'Alembert^1,3,^\\*§ aut$get_author_list(format = NULL) |> enumerate() #> Denis Diderot, Jean-Jacques Rousseau, François-Marie Arouet and Jean Le Rond d'Alembert"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"affiliations-notes","dir":"Articles","previous_headings":"Getting author information","what":"Affiliations & notes","title":"Introduction to plume","text":"get_affiliations() get_notes() return authors’ affiliations notes.","code":"aut$get_affiliations() #> ^1^Université de Paris #> ^2^Lycée Louis-le-Grand #> ^3^Collège des Quatre-Nations  aut$get_notes(sep = \": \", superscript = FALSE) #> †: born in 1713 in Langres #> ‡: also known as Voltaire #> §: born in 1717 in Paris"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"contact-details","dir":"Articles","previous_headings":"Getting author information","what":"Contact details","title":"Introduction to plume","text":"can get contact details corresponding authors using get_contact_details() method.","code":"aut$get_contact_details() #> diderot@encyclopediste.fr (Denis Diderot) #> alembert@encyclopediste.fr (Jean Le Rond d'Alembert)  aut$get_contact_details(phone = TRUE) #> diderot@encyclopediste.fr, 00 00 00 01 (Denis Diderot) #> alembert@encyclopediste.fr (Jean Le Rond d'Alembert)  aut$get_contact_details(format = \"{name}: {details}\") #> Denis Diderot: diderot@encyclopediste.fr #> Jean Le Rond d'Alembert: alembert@encyclopediste.fr"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"contributions","dir":"Articles","previous_headings":"Getting author information","what":"Contributions","title":"Introduction to plume","text":"plume provides convenient way generate contribution lists using get_contributions() method. default, get_contributions() lists contributors order ’re defined. can arrange contributors alphabetical order alphabetical_order = TRUE.","code":"aut <- Plume$new(encyclopedists, names = c(role = \"role_n\")) aut$get_contributions() #> Writing: D.D., J.-J.R., F.-M.A. and J.L.R.d'A. #> Supervision: D.D. and J.L.R.d'A.  aut$get_contributions(role_first = FALSE, literal_names = TRUE) #> Denis Diderot: Writing and Supervision #> Jean-Jacques Rousseau: Writing #> François-Marie Arouet: Writing #> Jean Le Rond d'Alembert: Writing and Supervision  aut_v <- Plume$new(encyclopedists, names = c(role = \"role_v\")) aut_v$get_contributions(role_first = FALSE, name_list = TRUE) #> D.D., J.-J.R., F.-M.A. and J.L.R.d'A. contributed to the Encyclopédie #> D.D. and J.L.R.d'A. supervised the project aut$get_contributions(alphabetical_order = TRUE) #> Writing: D.D., F.-M.A., J.-J.R. and J.L.R.d'A. #> Supervision: D.D. and J.L.R.d'A."},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"orcids","dir":"Articles","previous_headings":"Getting author information","what":"ORCIDs","title":"Introduction to plume","text":"get_orcids() returns authors respective ORCID. Denis Diderothttps://orcid.org/0000-0000-0000-0001 Jean-Jacques Rousseauhttps://orcid.org/0000-0000-0000-0002 Jean Le Rond d’Alemberthttps://orcid.org/0000-0000-0000-0003 Denis Diderot: 0000-0000-0000-0001 Jean-Jacques Rousseau: 0000-0000-0000-0002 Jean Le Rond d’Alembert: 0000-0000-0000-0003","code":"aut$get_orcids() aut$get_orcids(compact = TRUE, icon = FALSE, sep = \": \")"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"symbols","dir":"Articles","previous_headings":"","what":"Symbols","title":"Introduction to plume","text":"Default symbols : can change symbols creating plume object using parameter symbols. Use NULL display numbers. Use NULL much possible symbols using numerous unique items (typically affiliations). use letters given category unique items letters, can control sequencing behaviour using sequential() modifier, shown . default, plume repeats elements elements vector consumed. Using sequential() allows display logical sequence characters (e.g. , b, c, ..., z, aa, ab, ac, ..., az, ba, bb, bc, ...).","code":"#> List of 3 #>  $ affiliation  : NULL #>  $ corresponding: chr \"\\\\*\" #>  $ note         : chr [1:6] \"†\" \"‡\" \"§\" \"¶\" \"#\" \"\\\\*\\\\*\" aut <- Plume$new(encyclopedists, symbols = list(affiliation = letters, note = NULL))  aut$get_author_list(format = \"^a,n^\") |> enumerate(last = \",\\n\") #> Denis Diderot^a,1^, Jean-Jacques Rousseau^b^, François-Marie Arouet^b,2^, #> Jean Le Rond d'Alembert^a,c,3^ Plume$new(   encyclopedists,   symbols = list(affiliation = sequential(letters)) )"},{"path":"https://arnaudgallou.github.io/plume/articles/plume.html","id":"outputting-as-markdown-content","dir":"Articles","previous_headings":"","what":"Outputting as markdown content","title":"Introduction to plume","text":"output author data markdown content, use chunk option results: \"asis\" combination cat(). Inline chunks output values “” default can used follows: `r aut$get_contact_details()`","code":"```{r} #| results: \"asis\"  aut$get_contributions() |> cat(sep = \"; \") ```"},{"path":"https://arnaudgallou.github.io/plume/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arnaud Gallou. Author, maintainer.","code":""},{"path":"https://arnaudgallou.github.io/plume/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gallou (2023). plume: Author List Handler. https://github.com/arnaudgallou/plume.","code":"@Manual{,   title = {plume: An Author List Handler},   author = {Arnaud Gallou},   year = {2023},   url = {https://github.com/arnaudgallou/plume}, }"},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An Author List Handler","text":"plume provides tools handling generating author-related information scientific writing R Markdown Quarto. package implements two R6 classes: Plume: class generates author lists author-related information tabular data. PlumeQuarto: class extending Plume allows push update author metadata YAML header Quarto file. generated YAML complies Quarto’s author affiliations schemas.","code":""},{"path":"https://arnaudgallou.github.io/plume/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Author List Handler","text":"can install development version plume GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"arnaudgallou/plume\")"},{"path":"https://arnaudgallou.github.io/plume/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An Author List Handler","text":"minimal required data work plume classes data set containing given family names normally want provide information email addresses, ORCIDs, affiliations, etc. PlumeQuarto lets push author metadata YAML header .qmd files using to_yaml(). Consider following example: can also generate author information character strings:","code":"library(plume)  encyclopedists #> # A tibble: 4 × 12 #>   given_name family_name email phone orcid role_n1 role_n2 role_v1 role_v2 note  #>   <chr>      <chr>       <chr> <chr> <chr> <chr>   <chr>   <chr>   <chr>   <chr> #> 1 Denis      Diderot     dide… 00 0… 0000… Writing Superv… contri… superv… born… #> 2 Jean-Jacq… Rousseau    rous… <NA>  0000… Writing <NA>    contri… <NA>    <NA>  #> 3 François-… Arouet      arou… <NA>  <NA>  Writing <NA>    contri… <NA>    also… #> 4 Jean       Le Rond d'… alem… <NA>  0000… Writing Superv… contri… superv… born… #> # ℹ 2 more variables: affiliation1 <chr>, affiliation2 <chr>  Plume$new(encyclopedists) #> # A tibble: 4 × 11 #>      id given_name     family_name literal_name initials email orcid phone note  #>   <int> <chr>          <chr>       <chr>        <chr>    <chr> <chr> <chr> <chr> #> 1     1 Denis          Diderot     Denis Dider… DD       dide… 0000… 00 0… born… #> 2     2 Jean-Jacques   Rousseau    Jean-Jacque… J-JR     rous… 0000… <NA>  <NA>  #> 3     3 François-Marie Arouet      François-Ma… F-MA     arou… <NA>  <NA>  also… #> 4     4 Jean           Le Rond d'… Jean Le Ron… JLRd'A   alem… 0000… <NA>  born… #> # ℹ 2 more variables: affiliation <list>, role <list> --- title: Encyclopédie ---  Qui scribit bis legit aut <- PlumeQuarto$new(encyclopedists, names = c(role = \"role_n\")) aut$set_corresponding_authors(1, 4) aut$to_yaml(\"file.qmd\") --- title: Encyclopédie author:   - id: aut1     name:       given: Denis       family: Diderot     orcid: 0000-0000-0000-0001     email: diderot@encyclopediste.fr     phone: 00 00 00 01     roles:       - writing       - supervision     note: born in 1713 in Langres     attribute:       corresponding: true     affiliations:       - ref: aff1   - id: aut2     name:       given: Jean-Jacques       family: Rousseau     orcid: 0000-0000-0000-0002     email: rousseau@encyclopediste.fr     roles:       - writing     attribute:       corresponding: false     affiliations:       - ref: aff2   - id: aut3     name:       given: François-Marie       family: Arouet     email: arouet@encyclopediste.fr     roles:       - writing     note: also known as Voltaire     attribute:       corresponding: false     affiliations:       - ref: aff2   - id: aut4     name:       given: Jean       family: Le Rond d'Alembert     orcid: 0000-0000-0000-0003     email: alembert@encyclopediste.fr     roles:       - writing       - supervision     note: born in 1717 in Paris     attribute:       corresponding: true     affiliations:       - ref: aff1       - ref: aff3 affiliations:   - id: aff1     name: Université de Paris   - id: aff2     name: Lycée Louis-le-Grand   - id: aff3     name: Collège des Quatre-Nations ---  Qui scribit bis legit aut <- Plume$new(encyclopedists, names = c(role = \"role_n\")) aut$set_corresponding_authors(diderot, by = \"family_name\")  aut$get_author_list(format = \"^a,^cn\") |> enumerate(last = \",\\n\") #> Denis Diderot^1,^\\*†, Jean-Jacques Rousseau^2^, François-Marie Arouet^2^‡, #> Jean Le Rond d'Alembert^1,3^§  aut$get_contact_details() #> diderot@encyclopediste.fr (Denis Diderot)  aut$get_affiliations() #> ^1^Université de Paris #> ^2^Lycée Louis-le-Grand #> ^3^Collège des Quatre-Nations  aut$get_notes() #> ^†^born in 1713 in Langres #> ^‡^also known as Voltaire #> ^§^born in 1717 in Paris  aut$get_contributions() #> Writing: D.D., J.-J.R., F.-M.A. and J.L.R.d'A. #> Supervision: D.D. and J.L.R.d'A.  aut_v <- Plume$new(   encyclopedists,   names = c(role = \"role_v\"),   symbols = list(affiliation = letters) )  aut_v$get_author_list(format = \"^a^\") |> enumerate(last = \",\\n\") #> Denis Diderot^a^, Jean-Jacques Rousseau^b^, François-Marie Arouet^b^, #> Jean Le Rond d'Alembert^a,c^  aut_v$get_contributions(role_first = FALSE, name_list = TRUE) #> D.D., J.-J.R., F.-M.A. and J.L.R.d'A. contributed to the Encyclopédie #> D.D. and J.L.R.d'A. supervised the project"},{"path":"https://arnaudgallou.github.io/plume/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An Author List Handler","text":"Thanks Richard J. Telford advice helped conceive package.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"NameHandler class — NameHandler","title":"NameHandler class — NameHandler","text":"Internal class handles names plume object.","code":""},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NameHandler class — NameHandler","text":"NameHandler$new() NameHandler$clone()","code":""},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NameHandler class — NameHandler","text":"","code":"NameHandler$new(names)"},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NameHandler class — NameHandler","text":"objects class cloneable method.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NameHandler class — NameHandler","text":"","code":"NameHandler$clone(deep = FALSE)"},{"path":"https://arnaudgallou.github.io/plume/reference/NameHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NameHandler class — NameHandler","text":"deep Whether make deep clone.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":null,"dir":"Reference","previous_headings":"","what":"Plume class — Plume","title":"Plume class — Plume","text":"Class generating author lists author-related information.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Plume class — Plume","text":"plume::NameHandler -> plume::PlumeHandler -> Plume","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Plume class — Plume","text":"plume::PlumeHandler$get_plume() plume::PlumeHandler$print()","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Plume class — Plume","text":"Plume$new() Plume$set_corresponding_authors() Plume$get_author_list() Plume$get_orcids() Plume$get_affiliations() Plume$get_notes() Plume$get_contact_details() Plume$get_contributions() Plume$clone()","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Plume class — Plume","text":"Create Plume object.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$new(   data,   names = NULL,   symbols = NULL,   by = NULL,   initials_given_name = FALSE,   family_name_first = FALSE,   interword_spacing = TRUE,   orcid_icon = orcid() )"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"data data frame tibble containing author-related data. names vector column names. symbols list keys values defining symbols used link authors metadata. Valid keys \"affiliation\", \"corresponding\" \"note\". default, uses digits affiliations, \"*\" corresponding authors \"†\", \"‡\", \"§\", \"¶\", \"#\", \"**\" notes. Set key NULL use numerals. character string defining default variable used assign authors' status methods. default, uses authors' ids. initials_given_name initials given names used? family_name_first literal names show family names first. interword_spacing literal names use spacing? parameter useful people writing languages separate words space Chinese Japanese. orcid_icon ORCID icon, defined orcid(), used.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"Plume object.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-set-corresponding-authors-","dir":"Reference","previous_headings":"","what":"Method set_corresponding_authors()","title":"Plume class — Plume","text":"Set corresponding authors.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$set_corresponding_authors(..., by)"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"... Values column defined used specify corresponding authors. Matching values case-insensitive. Use \"\" assign TRUE authors. Variable used set corresponding authors. default, uses authors' ids.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"class instance.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-author-list-","dir":"Reference","previous_headings":"","what":"Method get_author_list()","title":"Plume class — Plume","text":"Get author list.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_author_list(format = NULL)"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"format character string defining format symbols suffixing author names. See details.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plume class — Plume","text":"format lets choose symbol categories suffix authors , using following keys: affiliations c corresponding authors n notes o ORCIDs order keys determines order symbol types. E.g. \"ac\" shows affiliation ids first corresponding author mark second, \"ca\" shows corresponding author mark first affiliation ids second. Use \",\" separate \"^\" superscript symbols. format = NULL lists author names without suffixes.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-orcids-","dir":"Reference","previous_headings":"","what":"Method get_orcids()","title":"Plume class — Plume","text":"Get authors' ORCID.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_orcids(compact = FALSE, icon = TRUE, sep = \"\")"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"compact links display 16-digit identifier? icon ORCID icon shown? sep Separator used separate authors respective ORCID.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"Authors' name followed respective ORCID.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-affiliations-","dir":"Reference","previous_headings":"","what":"Method get_affiliations()","title":"Plume class — Plume","text":"Get authors' affiliations.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_affiliations(sep = \"\", superscript = TRUE)"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"sep Separator used separate affiliation ids affiliations. superscript affiliation ids superscripted?","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-notes-","dir":"Reference","previous_headings":"","what":"Method get_notes()","title":"Plume class — Plume","text":"Get authors' notes.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_notes(sep = \"\", superscript = TRUE)"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"sep Separator used separate note ids notes. superscript note ids superscripted?","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-contact-details-","dir":"Reference","previous_headings":"","what":"Method get_contact_details()","title":"Plume class — Plume","text":"Get contact details corresponding authors.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_contact_details(   format = \"{details} ({name})\",   email = TRUE,   phone = FALSE,   fax = FALSE,   url = FALSE,   sep = \", \" )"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"format glue specification uses variables name details. email, phone, fax, url Arguments equal TRUE evaluated passed variable details. default, email set TRUE. sep Separator used separate details items.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-get-contributions-","dir":"Reference","previous_headings":"","what":"Method get_contributions()","title":"Plume class — Plume","text":"Get authors' contributions.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$get_contributions(   role_first = TRUE,   name_list = FALSE,   alphabetical_order = FALSE,   dotted_initials = TRUE,   literal_names = FALSE,   divider = NULL,   sep_last = NULL )"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"role_first TRUE, displays roles first authors second. FALSE, roles follow authors. name_list authors role listed together? applies role_first = FALSE. alphabetical_order authors listed alphabetical order? default, lists authors order defined. dotted_initials initials dot-separated? literal_names literal names used? divider Separator used separate role items authors name_list = FALSE. Uses \": \" default. sep_last Separator used separate last two roles authors one item associated role author.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Plume class — Plume","text":"character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Plume class — Plume","text":"objects class cloneable method.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Plume class — Plume","text":"","code":"Plume$clone(deep = FALSE)"},{"path":"https://arnaudgallou.github.io/plume/reference/Plume.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plume class — Plume","text":"deep Whether make deep clone.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":null,"dir":"Reference","previous_headings":"","what":"PlumeHandler class — PlumeHandler","title":"PlumeHandler class — PlumeHandler","text":"Internal class processing shaping tabular data plume object.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PlumeHandler class — PlumeHandler","text":"plume::NameHandler -> PlumeHandler","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PlumeHandler class — PlumeHandler","text":"Inherited methods","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PlumeHandler class — PlumeHandler","text":"PlumeHandler$new() PlumeHandler$print() PlumeHandler$get_plume() PlumeHandler$clone()","code":""},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeHandler class — PlumeHandler","text":"","code":"PlumeHandler$new(   data,   names,   initials_given_name,   family_name_first,   interword_spacing )"},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeHandler class — PlumeHandler","text":"","code":"PlumeHandler$print()"},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeHandler class — PlumeHandler","text":"","code":"PlumeHandler$get_plume()"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PlumeHandler class — PlumeHandler","text":"objects class cloneable method.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeHandler class — PlumeHandler","text":"","code":"PlumeHandler$clone(deep = FALSE)"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeHandler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlumeHandler class — PlumeHandler","text":"deep Whether make deep clone.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":null,"dir":"Reference","previous_headings":"","what":"PlumeQuarto class — PlumeQuarto","title":"PlumeQuarto class — PlumeQuarto","text":"Class extending Plume allows push update author metadata YAML header .qmd file. generated YAML complies Quarto's author affiliations schemas.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"PlumeQuarto class — PlumeQuarto","text":"plume::NameHandler -> plume::PlumeHandler -> plume::Plume -> PlumeQuarto","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PlumeQuarto class — PlumeQuarto","text":"plume::PlumeHandler$get_plume() plume::PlumeHandler$print() plume::Plume$get_affiliations() plume::Plume$get_author_list() plume::Plume$get_contact_details() plume::Plume$get_contributions() plume::Plume$get_notes() plume::Plume$get_orcids() plume::Plume$initialize() plume::Plume$set_corresponding_authors()","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PlumeQuarto class — PlumeQuarto","text":"PlumeQuarto$set_equal_contributor() PlumeQuarto$set_deceased() PlumeQuarto$to_yaml() PlumeQuarto$clone()","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"method-set-equal-contributor-","dir":"Reference","previous_headings":"","what":"Method set_equal_contributor()","title":"PlumeQuarto class — PlumeQuarto","text":"Set equal contributors.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeQuarto class — PlumeQuarto","text":"","code":"PlumeQuarto$set_equal_contributor(..., by)"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlumeQuarto class — PlumeQuarto","text":"... Values column defined used specify authors equal contributors. Matching values case-insensitive. Use \"\" assign equal contribution authors. Variable used specify authors equal contributors. default, uses authors' ids.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PlumeQuarto class — PlumeQuarto","text":"class instance.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"method-set-deceased-","dir":"Reference","previous_headings":"","what":"Method set_deceased()","title":"PlumeQuarto class — PlumeQuarto","text":"Set deceased authors.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeQuarto class — PlumeQuarto","text":"","code":"PlumeQuarto$set_deceased(..., by)"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlumeQuarto class — PlumeQuarto","text":"... Values column defined used specify whether author deceased . Matching values case-insensitive. Variable used specify whether author deceased . default, uses authors' ids.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PlumeQuarto class — PlumeQuarto","text":"class instance.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"method-to-yaml-","dir":"Reference","previous_headings":"","what":"Method to_yaml()","title":"PlumeQuarto class — PlumeQuarto","text":"Push update author information YAML header.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeQuarto class — PlumeQuarto","text":"","code":"PlumeQuarto$to_yaml(file)"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlumeQuarto class — PlumeQuarto","text":"file .qmd file.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PlumeQuarto class — PlumeQuarto","text":"missing, to_yaml() pushes author information YAML header. already existing, function replaces old author affiliations values ones provided input data.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PlumeQuarto class — PlumeQuarto","text":"input file invisibly.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PlumeQuarto class — PlumeQuarto","text":"objects class cloneable method.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PlumeQuarto class — PlumeQuarto","text":"","code":"PlumeQuarto$clone(deep = FALSE)"},{"path":"https://arnaudgallou.github.io/plume/reference/PlumeQuarto.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlumeQuarto class — PlumeQuarto","text":"deep Whether make deep clone.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/encyclopedists.html","id":null,"dir":"Reference","previous_headings":"","what":"Famous encyclopedists — encyclopedists","title":"Famous encyclopedists — encyclopedists","text":"Data four famous authors Encyclopédie (originally \"Encyclopédie, ou dictionnaire raisonné des sciences, des arts et des métiers\") published France second half 18th century. data set available English (encyclopedists) French (encyclopedists_fr).","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/encyclopedists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Famous encyclopedists — encyclopedists","text":"","code":"encyclopedists  encyclopedists_fr"},{"path":"https://arnaudgallou.github.io/plume/reference/encyclopedists.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Famous encyclopedists — encyclopedists","text":"tibble 4 rows 12 variables: given_name,prénom authors' given names family_name,nom authors' family names email,courriel authors' email addresses phone,téléphone authors' phone numbers orcid authors' ORCID affiliation authors' affiliations role_n authors' roles written nouns role_v authors' roles written active verbs note special notes authors","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/encyclopedists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Famous encyclopedists — encyclopedists","text":"","code":"encyclopedists #> # A tibble: 4 × 12 #>   given_name family_name email phone orcid role_n1 role_n2 role_v1 role_v2 note  #>   <chr>      <chr>       <chr> <chr> <chr> <chr>   <chr>   <chr>   <chr>   <chr> #> 1 Denis      Diderot     dide… 00 0… 0000… Writing Superv… contri… superv… born… #> 2 Jean-Jacq… Rousseau    rous… NA    0000… Writing NA      contri… NA      NA    #> 3 François-… Arouet      arou… NA    NA    Writing NA      contri… NA      also… #> 4 Jean       Le Rond d'… alem… NA    0000… Writing Superv… contri… superv… born… #> # ℹ 2 more variables: affiliation1 <chr>, affiliation2 <chr> encyclopedists_fr #> # A tibble: 4 × 12 #>   prénom    nom   courriel téléphone orcid role_n1 role_n2 role_v1 role_v2 note  #>   <chr>     <chr> <chr>    <chr>     <chr> <chr>   <chr>   <chr>   <chr>   <chr> #> 1 Denis     Dide… diderot… 00 00 00… 0000… Rédact… Superv… ont co… ont su… né e… #> 2 Jean-Jac… Rous… roussea… NA        0000… Rédact… NA      ont co… NA      NA    #> 3 François… Arou… arouet@… NA        NA    Rédact… NA      ont co… NA      dit … #> 4 Jean      Le R… alember… NA        0000… Rédact… Superv… ont co… ont su… né e… #> # ℹ 2 more variables: affiliation1 <chr>, affiliation2 <chr>"},{"path":"https://arnaudgallou.github.io/plume/reference/enumerate.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate vector elements — enumerate","title":"Enumerate vector elements — enumerate","text":"Wrapper around glue_collapse() using sep = \", \" last = \" \" default arguments.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/enumerate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate vector elements — enumerate","text":"","code":"enumerate(x, sep = \", \", last = \" and \")"},{"path":"https://arnaudgallou.github.io/plume/reference/enumerate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate vector elements — enumerate","text":"x character vector. sep Separator used separate terms. last Separator used separate last two items x least 2 items.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"ORCID icon — orcid","title":"ORCID icon — orcid","text":"Helper function control size colour ORCID icon.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ORCID icon — orcid","text":"","code":"orcid(size = 16, bw = FALSE)"},{"path":"https://arnaudgallou.github.io/plume/reference/orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ORCID icon — orcid","text":"size Size icon pixels. bw black white version icon used?","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/plm_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table template for plume classes — plm_template","title":"Create a table template for plume classes — plm_template","text":"helper function allows generate empty tibble can use template supply author data.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/plm_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table template for plume classes — plm_template","text":"","code":"plm_template(minimal = TRUE)"},{"path":"https://arnaudgallou.github.io/plume/reference/plm_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table template for plume classes — plm_template","text":"minimal TRUE, returns empty tibble following columns: given_name, family_name, email, orcid, affiliation, role note. Otherwise function returns template columns can supplied plume classes.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/plm_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table template for plume classes — plm_template","text":"empty tibble.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/plume-package.html","id":null,"dir":"Reference","previous_headings":"","what":"plume: An Author List Handler — plume-package","title":"plume: An Author List Handler — plume-package","text":"tool handling printing author information R Markdown Quarto.","code":""},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/reference/plume-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plume: An Author List Handler — plume-package","text":"Maintainer: Arnaud Gallou agallou.gh@gmail.com (ORCID)","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/sequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Control sequencing behaviour of vectors — sequential","title":"Control sequencing behaviour of vectors — sequential","text":"Modifier function used generate logical sequences characters.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/sequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control sequencing behaviour of vectors — sequential","text":"","code":"sequential(x)"},{"path":"https://arnaudgallou.github.io/plume/reference/sequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control sequencing behaviour of vectors — sequential","text":"x character vector.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/sequential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control sequencing behaviour of vectors — sequential","text":"","code":"aut <- Plume$new(   tibble::tibble(given_name = \"X\", family_name = \"Y\", affiliation = 1:60),   symbols = list(affiliation = sequential(letters)) )  aut$get_affiliations(sep = \": \", superscript = FALSE) |> cat(sep = \"\\n\") #> a: 1 #> b: 2 #> c: 3 #> d: 4 #> e: 5 #> f: 6 #> g: 7 #> h: 8 #> i: 9 #> j: 10 #> k: 11 #> l: 12 #> m: 13 #> n: 14 #> o: 15 #> p: 16 #> q: 17 #> r: 18 #> s: 19 #> t: 20 #> u: 21 #> v: 22 #> w: 23 #> x: 24 #> y: 25 #> z: 26 #> aa: 27 #> ab: 28 #> ac: 29 #> ad: 30 #> ae: 31 #> af: 32 #> ag: 33 #> ah: 34 #> ai: 35 #> aj: 36 #> ak: 37 #> al: 38 #> am: 39 #> an: 40 #> ao: 41 #> ap: 42 #> aq: 43 #> ar: 44 #> as: 45 #> at: 46 #> au: 47 #> av: 48 #> aw: 49 #> ax: 50 #> ay: 51 #> az: 52 #> ba: 53 #> bb: 54 #> bc: 55 #> bd: 56 #> be: 57 #> bf: 58 #> bg: 59 #> bh: 60"},{"path":"https://arnaudgallou.github.io/plume/reference/set_default_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set new default names to a plume subclass — set_default_names","title":"Set new default names to a plume subclass — set_default_names","text":"helper function allows set new default names plume subclass, e.g. set default names language English. See vignette(\"working---languages\") details.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/set_default_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set new default names to a plume subclass — set_default_names","text":"","code":"set_default_names(...)"},{"path":"https://arnaudgallou.github.io/plume/reference/set_default_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set new default names to a plume subclass — set_default_names","text":"... Key-value pairs keys old names values respective replacements.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/set_default_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set new default names to a plume subclass — set_default_names","text":"named list.","code":""},{"path":"https://arnaudgallou.github.io/plume/reference/set_default_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set new default names to a plume subclass — set_default_names","text":"Available names : id, initials, literal_name, corresponding, deceased, equal_contributor, given_name, family_name, number, dropping_particle, email, orcid, phone, fax, url, affiliation, role, note","code":""},{"path":[]},{"path":"https://arnaudgallou.github.io/plume/news/index.html","id":"documentation-improvements-development-version","dir":"Changelog","previous_headings":"","what":"Documentation improvements","title":"plume (development version)","text":"New vignette(\"plume-workflow\") describes use plume googlesheets4 manage author metadata.","code":""},{"path":"https://arnaudgallou.github.io/plume/news/index.html","id":"minor-improvements-and-bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"plume (development version)","text":"Fixed issues pushing metadata empty YAML headers (#9). PlumeQuarto now handles roles via roles YAML key (#5). New method get_orcids() returns authors’ ORCID. Phone numbers now set using variable attribute phone (#4). plume methods now print outputs way. get_author_list() now accepts format = \"\" return author names . equivalent format = NULL (#3). plume classes now error given family name NA blank string. Blank empty strings now converted NA creating plume object (#2). get_contact_details() now drops corresponding authors contact details. get_contact_details() reworked bind combination contact details properly. to_yaml() now outputs verbatim true/false (#1).","code":""}]
