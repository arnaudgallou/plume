% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plm_push.R
\name{plm_push}
\alias{plm_push}
\title{Push plume objects into a Quarto document}
\usage{
plm_push(x, file, where = NULL, sep = "; ")
}
\arguments{
\item{x}{A plume object.}

\item{file}{A \code{.qmd} file.}

\item{where}{Line of text present in \code{file} after which data should appear.
This parameter is ignored if an anchor for the specific data to insert already
exits in the file.}

\item{sep}{Separator used to separate items passed to \code{x}.}
}
\value{
The input \code{file} invisibly.
}
\description{
\code{plm_push()} inserts author information not handled by Quarto's
author schema into a Quarto document. This function should only be used with
\code{\link{PlumeQuarto}} to inject author data from a separate script that are not
passed via \code{\link[=PlumeQuarto]{PlumeQuarto$to_yaml()}}. It's handy to avoid
instantiating the class both in the R script and Quarto file.
}
\examples{
tmp_file <- withr::local_tempfile(
  lines = "# Foo\n\n# Bar",
  fileext = ".qmd"
)

readr::read_file(tmp_file) |> cat()

o <- PlumeQuarto$new(
  encyclopedists,
  names = c(contribution = "contribution_n")
)
o$get_contributions() |> plm_push(tmp_file, where = "# Foo")

readr::read_file(tmp_file) |> cat()
}
